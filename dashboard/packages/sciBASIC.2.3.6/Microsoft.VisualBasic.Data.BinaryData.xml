<?xml version="1.0"?>
<doc>
<assembly>
<name>
Microsoft.VisualBasic.Data.BinaryData
</name>
</assembly>
<members>
<member name="T:Microsoft.VisualBasic.Data.IO.BinaryDateTimeFormat">
 <summary>
 Represents the set of formats of binary date and time encodings.
 </summary>
</member>
<member name="F:Microsoft.VisualBasic.Data.IO.BinaryDateTimeFormat.CTime">
 <summary>
 The <see cref="T:System.DateTime"/> has the time_t format of the C library.
 </summary>
</member>
<member name="F:Microsoft.VisualBasic.Data.IO.BinaryDateTimeFormat.NetTicks">
 <summary>
 The <see cref="T:System.DateTime"/> is stored as the ticks of a .NET <see cref="T:System.DateTime"/> instance.
 </summary>
</member>
<member name="T:Microsoft.VisualBasic.Data.IO.BinaryStringFormat">
 <summary>
 Represents the set of formats of binary string encodings.
 </summary>
</member>
<member name="F:Microsoft.VisualBasic.Data.IO.BinaryStringFormat.ByteLengthPrefix">
 <summary>
 The string has a prefix of 1 byte determining the length of the string and no postfix.
 </summary>
</member>
<member name="F:Microsoft.VisualBasic.Data.IO.BinaryStringFormat.WordLengthPrefix">
 <summary>
 The string has a prefix of 2 bytes determining the length of the string and no postfix.
 </summary>
</member>
<member name="F:Microsoft.VisualBasic.Data.IO.BinaryStringFormat.DwordLengthPrefix">
 <summary>
 The string has a prefix of 4 bytes determining the length of the string and no postfix.
 </summary>
</member>
<member name="F:Microsoft.VisualBasic.Data.IO.BinaryStringFormat.ZeroTerminated">
 <summary>
 The string has no prefix and is terminated with a byte of the value 0.
 </summary>
</member>
<member name="F:Microsoft.VisualBasic.Data.IO.BinaryStringFormat.NoPrefixOrTermination">
 <summary>
 The string has neither prefix nor postfix. This format is only valid for writing strings. For reading
 strings, the length has to be specified manually.
 </summary>
</member>
<member name="T:Microsoft.VisualBasic.Data.IO.BinaryDataReader">
 <summary>
 Represents an extended <see cref="T:System.IO.BinaryReader"/> supporting special file format data types.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.#ctor(System.IO.Stream)">
 <summary>
 Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataReader"/> class based on the specified stream and
 using UTF-8 encoding.
 </summary>
 <param name="input">The input stream.</param>
 <exception cref="T:System.ArgumentException">The stream does not support reading, is null, or is already closed.
 </exception>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.#ctor(System.IO.Stream,System.Boolean)">
 <summary>
 Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataReader"/> class based on the specified stream, UTF-8
 encoding and optionally leaves the stream open.
 </summary>
 <param name="input">The input stream.</param>
 <param name="leaveOpen"><c>true</c> to leave the stream open after the <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataReader"/> object
 is disposed; otherwise <c>false</c>.</param>
 <exception cref="T:System.ArgumentException">The stream does not support reading, is null, or is already closed.
 </exception>
 <exception cref="T:System.ArgumentNullException">encoding is null.</exception>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.#ctor(System.IO.Stream,System.Text.Encoding)">
 <summary>
 Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataReader"/> class based on the specified stream and
 character encoding.
 </summary>
 <param name="input">The input stream.</param>
 <param name="encoding">The character encoding to use.</param>
 <exception cref="T:System.ArgumentException">The stream does not support reading, is null, or is already closed.
 </exception>
 <exception cref="T:System.ArgumentNullException">encoding is null.</exception>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
 <summary>
 Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataReader"/> class based on the specified stream and
 character encoding, and optionally leaves the stream open.
 </summary>
 <param name="input">The input stream.</param>
 <param name="encoding__1">The character encoding to use.</param>
 <param name="leaveOpen"><c>true</c> to leave the stream open after the <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataReader"/> object
 is disposed; otherwise <c>false</c>.</param>
 <exception cref="T:System.ArgumentException">The stream does not support reading, is null, or is already closed.
 </exception>
 <exception cref="T:System.ArgumentNullException">encoding is null.</exception>
</member>
<member name="P:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ByteOrder">
 <summary>
 Gets or sets the byte order used to parse binary data with.
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.Data.IO.BinaryDataReader.Encoding">
 <summary>
 Gets the encoding used for string related operations where no other encoding has been provided. Due to the
 way the underlying <see cref="T:System.IO.BinaryReader"/> is instantiated, it can only be specified at creation time.
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.Data.IO.BinaryDataReader.Length">
 <summary>
 Gets the length in bytes of the stream in bytes. This is a shortcut to the base stream Length property.
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.Data.IO.BinaryDataReader.Position">
 <summary>
 Gets or sets the position within the current stream. This is a shortcut to the base stream Position
 property.
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.Data.IO.BinaryDataReader.EndOfStream">
 <summary>
 Gets a value indicating whether the end of the stream has been reached and no more data can be read.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.Align(System.Int32)">
 <summary>
 Aligns the reader to the next given byte multiple.
 </summary>
 <param name="alignment">The byte multiple.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadDateTime(Microsoft.VisualBasic.Data.IO.BinaryDateTimeFormat)">
 <summary>
 Reads a <see cref="T:System.DateTime"/> from the current stream. The <see cref="T:System.DateTime"/> is available in the
 specified binary format.
 </summary>
 <param name="format">The binary format, in which the <see cref="T:System.DateTime"/> will be read.</param>
 <returns>The <see cref="T:System.DateTime"/> read from the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadDecimal">
 <summary>
 Reads an 16-byte floating point value from the current stream and advances the current position of the
 stream by sixteen bytes.
 </summary>
 <returns>The 16-byte floating point value read from the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadDecimals(System.Int32)">
 <summary>
 Reads the specified number of <see cref="T:System.Decimal"/> values from the current stream into a
 <see cref="T:System.Decimal"/> array and advances the current position by that number of <see cref="T:System.Decimal"/> values
 multiplied with the size of a single value.
 </summary>
 <param name="count">The number of <see cref="T:System.Decimal"/> values to read.</param>
 <returns>The <see cref="T:System.Decimal"/> array containing data read from the current stream. This might be less
 than the number of bytes requested if the end of the stream is reached.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadDouble">
 <summary>
 Reads an 8-byte floating point value from the current stream and advances the current position of the stream
 by eight bytes.
 </summary>
 <returns>The 8-byte floating point value read from the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadDoubles(System.Int32)">
 <summary>
 Reads the specified number of <see cref="T:System.Double"/> values from the current stream into a
 <see cref="T:System.Double"/> array and advances the current position by that number of <see cref="T:System.Double"/> values
 multiplied with the size of a single value.
 </summary>
 <param name="count">The number of <see cref="T:System.Double"/> values to read.</param>
 <returns>The <see cref="T:System.Double"/> array containing data read from the current stream. This might be less
 than the number of bytes requested if the end of the stream is reached.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadInt16">
 <summary>
 Reads a 2-byte signed integer from the current stream and advances the current position of the stream by two
 bytes.
 </summary>
 <returns>The 2-byte signed integer read from the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadInt16s(System.Int32)">
 <summary>
 Reads the specified number of <see cref="T:System.Int16"/> values from the current stream into a <see cref="T:System.Int16"/>
 array and advances the current position by that number of <see cref="T:System.Int16"/> values multiplied with the
 size of a single value.
 </summary>
 <param name="count">The number of <see cref="T:System.Int16"/> values to read.</param>
 <returns>The <see cref="T:System.Int16"/> array containing data read from the current stream. This might be less than
 the number of bytes requested if the end of the stream is reached.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadInt32">
 <summary>
 Reads a 4-byte signed integer from the current stream and advances the current position of the stream by
 four bytes.
 </summary>
 <returns>The 4-byte signed integer read from the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadInt32s(System.Int32)">
 <summary>
 Reads the specified number of <see cref="T:System.Int32"/> values from the current stream into a <see cref="T:System.Int32"/>
 array and advances the current position by that number of <see cref="T:System.Int32"/> values multiplied with the
 size of a single value.
 </summary>
 <param name="count">The number of <see cref="T:System.Int32"/> values to read.</param>
 <returns>The <see cref="T:System.Int32"/> array containing data read from the current stream. This might be less than
 the number of bytes requested if the end of the stream is reached.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadInt64">
 <summary>
 Reads an 8-byte signed integer from the current stream and advances the current position of the stream by
 eight bytes.
 </summary>
 <returns>The 8-byte signed integer read from the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadInt64s(System.Int32)">
 <summary>
 Reads the specified number of <see cref="T:System.Int64"/> values from the current stream into a <see cref="T:System.Int64"/>
 array and advances the current position by that number of <see cref="T:System.Int64"/> values multiplied with the
 size of a single value.
 </summary>
 <param name="count">The number of <see cref="T:System.Int64"/> values to read.</param>
 <returns>The <see cref="T:System.Int64"/> array containing data read from the current stream. This might be less than
 the number of bytes requested if the end of the stream is reached.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadSBytes(System.Int32)">
 <summary>
 Reads the specified number of <see cref="T:System.SByte"/> values from the current stream into a <see cref="T:System.SByte"/>
 array and advances the current position by that number of <see cref="T:System.SByte"/> values multiplied with the
 size of a single value.
 </summary>
 <param name="count">The number of <see cref="T:System.SByte"/> values to read.</param>
 <returns>The <see cref="T:System.SByte"/> array containing data read from the current stream. This might be less than
 the number of bytes requested if the end of the stream is reached.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadSingle">
 <summary>
 Reads a 4-byte floating point value from the current stream and advances the current position of the stream
 by four bytes.
 </summary>
 <returns>The 4-byte floating point value read from the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadSingles(System.Int32)">
 <summary>
 Reads the specified number of <see cref="T:System.Single"/> values from the current stream into a
 <see cref="T:System.Single"/> array and advances the current position by that number of <see cref="T:System.Single"/> values
 multiplied with the size of a single value.
 </summary>
 <param name="count">The number of <see cref="T:System.Single"/> values to read.</param>
 <returns>The <see cref="T:System.Single"/> array containing data read from the current stream. This might be less
 than the number of bytes requested if the end of the stream is reached.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadString(Microsoft.VisualBasic.Data.IO.BinaryStringFormat)">
 <summary>
 Reads a string from the current stream. The string is available in the specified binary format.
 </summary>
 <param name="format">The binary format, in which the string will be read.</param>
 <returns>The string read from the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadString(Microsoft.VisualBasic.Data.IO.BinaryStringFormat,System.Text.Encoding)">
 <summary>
 Reads a string from the current stream. The string is available in the specified binary format and encoding.
 </summary>
 <param name="format">The binary format, in which the string will be read.</param>
 <param name="encoding">The encoding used for converting the string.</param>
 <returns>The string read from the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadString(System.Int32)">
 <summary>
 Reads a string from the current stream. The string has neither a prefix or postfix, the length has to be
 specified manually.
 </summary>
 <param name="length">The length of the string.</param>
 <returns>The string read from the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadString(System.Int32,System.Text.Encoding)">
 <summary>
 Reads a string from the current stream. The string has neither a prefix or postfix, the length has to be
 specified manually. The string is available in the specified encoding.
 </summary>
 <param name="length">The length of the string.</param>
 <param name="encoding">The encoding to use for reading the string.</param>
 <returns>The string read from the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadUInt16">
 <summary>
 Reads a 2-byte unsigned integer from the current stream using little-endian encoding and advances the
 position of the stream by two bytes.
 </summary>
 <returns>The 2-byte unsigned integer read from the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadUInt16s(System.Int32)">
 <summary>
 Reads the specified number of <see cref="T:System.UInt16"/> values from the current stream into a
 <see cref="T:System.UInt16"/> array and advances the current position by that number of <see cref="T:System.UInt16"/> values
 multiplied with the size of a single value.
 </summary>
 <param name="count">The number of <see cref="T:System.UInt16"/> values to read.</param>
 <returns>The <see cref="T:System.UInt16"/> array containing data read from the current stream. This might be less
 than the number of bytes requested if the end of the stream is reached.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadUInt32">
 <summary>
 Reads an 8-byte unsigned integer from the current stream and advances the position of the stream by eight
 bytes.
 </summary>
 <returns>The 8-byte unsigned integer read from the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadUInt32s(System.Int32)">
 <summary>
 Reads the specified number of <see cref="T:System.UInt32"/> values from the current stream into a
 <see cref="T:System.UInt32"/> array and advances the current position by that number of <see cref="T:System.UInt32"/> values
 multiplied with the size of a single value.
 </summary>
 <param name="count">The number of <see cref="T:System.UInt32"/> values to read.</param>
 <returns>The <see cref="T:System.UInt32"/> array containing data read from the current stream. This might be less
 than the number of bytes requested if the end of the stream is reached.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadUInt64">
 <summary>
 Reads an 8-byte unsigned integer from the current stream and advances the position of the stream by eight
 bytes.
 </summary>
 <returns>The 8-byte unsigned integer read from the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.ReadUInt64s(System.Int32)">
 <summary>
 Reads the specified number of <see cref="T:System.UInt64"/> values from the current stream into a
 <see cref="T:System.UInt64"/> array and advances the current position by that number of <see cref="T:System.UInt64"/> values
 multiplied with the size of a single value.
 </summary>
 <param name="count">The number of <see cref="T:System.UInt64"/> values to read.</param>
 <returns>The <see cref="T:System.UInt64"/> array containing data read from the current stream. This might be less
 than the number of bytes requested if the end of the stream is reached.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.Seek(System.Int64)">
 <summary>
 Sets the position within the current stream. This is a shortcut to the base stream Seek method.
 </summary>
 <param name="offset">A byte offset relative to the current position in the stream.</param>
 <returns>The new position within the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.Seek(System.Int64,System.IO.SeekOrigin)">
 <summary>
 Sets the position within the current stream. This is a shortcut to the base stream Seek method.
 </summary>
 <param name="offset">A byte offset relative to the origin parameter.</param>
 <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain
 the new position.</param>
 <returns>The new position within the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.TemporarySeek">
 <summary>
 Creates a <see cref="T:Microsoft.VisualBasic.Data.IO.SeekTask"/> to restore the current position after it has been disposed.
 </summary>
 <returns>The <see cref="T:Microsoft.VisualBasic.Data.IO.SeekTask"/> to be disposed to restore to the current position.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.TemporarySeek(System.Int64)">
 <summary>
 Creates a <see cref="T:Microsoft.VisualBasic.Data.IO.SeekTask"/> with the given parameters. As soon as the returned <see cref="T:Microsoft.VisualBasic.Data.IO.SeekTask"/>
 is disposed, the previous stream position will be restored.
 </summary>
 <param name="offset">A byte offset relative to the current position in the stream.</param>
 <returns>The <see cref="T:Microsoft.VisualBasic.Data.IO.SeekTask"/> to be disposed to undo the seek.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataReader.TemporarySeek(System.Int64,System.IO.SeekOrigin)">
 <summary>
 Creates a <see cref="T:Microsoft.VisualBasic.Data.IO.SeekTask"/> with the given parameters. As soon as the returned <see cref="T:Microsoft.VisualBasic.Data.IO.SeekTask"/>
 is disposed, the previous stream position will be restored.
 </summary>
 <param name="offset">A byte offset relative to the origin parameter.</param>
 <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain
 the new position.</param>
 <returns>The <see cref="T:Microsoft.VisualBasic.Data.IO.SeekTask"/> to be disposed to undo the seek.</returns>
</member>
<member name="T:Microsoft.VisualBasic.Data.IO.BinaryDataWriter">
 <summary>
 Represents an extended <see cref="T:System.IO.BinaryWriter"/> supporting special file format data types.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.#ctor(System.IO.Stream)">
 <summary>
 Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataWriter"/> class based on the specified stream and
 using UTF-8 encoding.
 </summary>
 <param name="output">The output stream.</param>
 <exception cref="T:System.ArgumentException">The stream does not support writing or is already closed.</exception>
 <exception cref="T:System.ArgumentNullException">output is null.</exception>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.#ctor(System.IO.Stream,System.Boolean)">
 <summary>
 Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataWriter"/> class based on the specified stream, UTF-8
 encoding and optionally leaves the stream open.
 </summary>
 <param name="output">The output stream.</param>
 <param name="leaveOpen"><c>true</c> to leave the stream open after the <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataWriter"/> object
 is disposed; otherwise <c>false</c>.</param>
 <exception cref="T:System.ArgumentException">The stream does not support writing or is already closed.</exception>
 <exception cref="T:System.ArgumentNullException">output is null.</exception>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
 <summary>
 Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataWriter"/> class based on the specified stream and
 character encoding.
 </summary>
 <param name="output">The output stream.</param>
 <param name="encoding">The character encoding to use.</param>
 <exception cref="T:System.ArgumentException">The stream does not support writing or is already closed.</exception>
 <exception cref="T:System.ArgumentNullException">output or encoding is null.</exception>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
 <summary>
 Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataWriter"/> class based on the specified stream and
 character encoding, and optionally leaves the stream open.
 </summary>
 <param name="output">The output stream.</param>
 <param name="encoding__1">The character encoding to use.</param>
 <param name="leaveOpen"><c>true</c> to leave the stream open after the <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataWriter"/> object
 is disposed; otherwise <c>false</c>.</param>
 <exception cref="T:System.ArgumentException">The stream does not support writing or is already closed.</exception>
 <exception cref="T:System.ArgumentNullException">output or encoding is null.</exception>
</member>
<member name="P:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.ByteOrder">
 <summary>
 Gets or sets the byte order used to parse binary data with.
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Encoding">
 <summary>
 Gets the encoding used for string related operations where no other encoding has been provided. Due to the
 way the underlying <see cref="T:System.IO.BinaryWriter"/> is instantiated, it can only be specified at creation time.
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Position">
 <summary>
 Gets or sets the position within the current stream. This is a shortcut to the base stream Position
 property.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.ReserveOffset">
 <summary>
 Allocates space for an <see cref="T:Microsoft.VisualBasic.Data.IO.Offset"/> which can be satisfied later on.
 </summary>
 <returns>An <see cref="T:Microsoft.VisualBasic.Data.IO.Offset"/> to satisfy later on.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Align(System.Int32)">
 <summary>
 Aligns the reader to the next given byte multiple..
 </summary>
 <param name="alignment">The byte multiple.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Seek(System.Int64)">
 <summary>
 Sets the position within the current stream. This is a shortcut to the base stream Seek method.
 </summary>
 <param name="offset">A byte offset relative to the current position in the stream.</param>
 <returns>The new position within the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Seek(System.Int64,System.IO.SeekOrigin)">
 <summary>
 Sets the position within the current stream. This is a shortcut to the base stream Seek method.
 </summary>
 <param name="offset">A byte offset relative to the origin parameter.</param>
 <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain
 the new position.</param>
 <returns>The new position within the current stream.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.TemporarySeek(System.Int64)">
 <summary>
 Creates a <see cref="T:Microsoft.VisualBasic.Data.IO.SeekTask"/> with the given parameters. As soon as the returned <see cref="T:Microsoft.VisualBasic.Data.IO.SeekTask"/>
 is disposed, the previous stream position will be restored.
 </summary>
 <param name="offset">A byte offset relative to the current position in the stream.</param>
 <returns>A <see cref="T:Microsoft.VisualBasic.Data.IO.SeekTask"/> to be disposed to undo the seek.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.TemporarySeek(System.Int64,System.IO.SeekOrigin)">
 <summary>
 Creates a <see cref="T:Microsoft.VisualBasic.Data.IO.SeekTask"/> with the given parameters. As soon as the returned <see cref="T:Microsoft.VisualBasic.Data.IO.SeekTask"/>
 is disposed, the previous stream position will be restored.
 </summary>
 <param name="offset">A byte offset relative to the origin parameter.</param>
 <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain
 the new position.</param>
 <returns>A <see cref="T:Microsoft.VisualBasic.Data.IO.SeekTask"/> to be disposed to undo the seek.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.DateTime,Microsoft.VisualBasic.Data.IO.BinaryDateTimeFormat)">
 <summary>
 Writes a <see cref="T:System.DateTime"/> to this stream. The <see cref="T:System.DateTime"/> will be available in the
 specified binary format.
 </summary>
 <param name="value">The value to write.</param>
 <param name="format">The binary format in which the <see cref="T:System.DateTime"/> will be written.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.Decimal)">
 <summary>
 Writes an 16-byte floating point value to this stream and advances the current position of the stream by
 sixteen bytes.
 </summary>
 <param name="value">The value to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.Decimal[])">
 <summary>
 Writes the specified number of <see cref="T:System.Decimal"/> values into the current stream and advances the current
 position by that number of <see cref="T:System.Decimal"/> values multiplied with the size of a single value.
 </summary>
 <param name="values">The <see cref="T:System.Decimal"/> values to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.Double)">
 <summary>
 Writes an 8-byte floating point value to this stream and advances the current position of the stream by
 eight bytes.
 </summary>
 <param name="value">The value to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.Double[])">
 <summary>
 Writes the specified number of <see cref="T:System.Double"/> values into the current stream and advances the current
 position by that number of <see cref="T:System.Double"/> values multiplied with the size of a single value.
 </summary>
 <param name="values">The <see cref="T:System.Double"/> values to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.Int16)">
 <summary>
 Writes an 2-byte signed integer to this stream and advances the current position of the stream by two bytes.
 </summary>
 <param name="value">The value to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.Int16[])">
 <summary>
 Writes the specified number of <see cref="T:System.Int16"/> values into the current stream and advances the current
 position by that number of <see cref="T:System.Int16"/> values multiplied with the size of a single value.
 </summary>
 <param name="values">The <see cref="T:System.Int16"/> values to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.Int32)">
 <summary>
 Writes an 4-byte signed integer to this stream and advances the current position of the stream by four
 bytes.
 </summary>
 <param name="value">The value to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.Int32[])">
 <summary>
 Writes the specified number of <see cref="T:System.Int32"/> values into the current stream and advances the current
 position by that number of <see cref="T:System.Int32"/> values multiplied with the size of a single value.
 </summary>
 <param name="values">The <see cref="T:System.Int32"/> values to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.Int64)">
 <summary>
 Writes an 8-byte signed integer to this stream and advances the current position of the stream by eight
 bytes.
 </summary>
 <param name="value">The value to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.Int64[])">
 <summary>
 Writes the specified number of <see cref="T:System.Int64"/> values into the current stream and advances the current
 position by that number of <see cref="T:System.Int64"/> values multiplied with the size of a single value.
 </summary>
 <param name="values">The <see cref="T:System.Int64"/> values to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.Single)">
 <summary>
 Writes an 4-byte floating point value to this stream and advances the current position of the stream by four
 bytes.
 </summary>
 <param name="value">The value to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.Single[])">
 <summary>
 Writes the specified number of <see cref="T:System.Single"/> values into the current stream and advances the current
 position by that number of <see cref="T:System.Single"/> values multiplied with the size of a single value.
 </summary>
 <param name="values">The <see cref="T:System.Single"/> values to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.String,Microsoft.VisualBasic.Data.IO.BinaryStringFormat)">
 <summary>
 Writes a string to this stream in the current encoding of the <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataWriter"/> and advances
 the current position of the stream in accordance with the encoding used and the specific characters being
 written to the stream. The string will be available in the specified binary format.
 </summary>
 <param name="value">The value to write.</param>
 <param name="format">The binary format in which the string will be written.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.String,Microsoft.VisualBasic.Data.IO.BinaryStringFormat,System.Text.Encoding)">
 <summary>
 Writes a string to this stream with the given encoding and advances the current position of the stream in
 accordance with the encoding used and the specific characters being written to the stream. The string will
 be available in the specified binary format.
 </summary>
 <param name="value">The value to write.</param>
 <param name="format">The binary format in which the string will be written.</param>
 <param name="encoding">The encoding used for converting the string.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.UInt16)">
 <summary>
 Writes an 2-byte unsigned integer value to this stream and advances the current position of the stream by
 two bytes.
 </summary>
 <param name="value">The value to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.UInt16[])">
 <summary>
 Writes the specified number of <see cref="T:System.UInt16"/> values into the current stream and advances the current
 position by that number of <see cref="T:System.UInt16"/> values multiplied with the size of a single value.
 </summary>
 <param name="values">The <see cref="T:System.UInt16"/> values to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.UInt32)">
 <summary>
 Writes an 4-byte unsigned integer value to this stream and advances the current position of the stream by
 four bytes.
 </summary>
 <param name="value">The value to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.UInt32[])">
 <summary>
 Writes the specified number of <see cref="T:System.UInt32"/> values into the current stream and advances the current
 position by that number of <see cref="T:System.UInt32"/> values multiplied with the size of a single value.
 </summary>
 <param name="values">The <see cref="T:System.UInt32"/> values to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.UInt64)">
 <summary>
 Writes an 8-byte unsigned integer value to this stream and advances the current position of the stream by
 eight bytes.
 </summary>
 <param name="value">The value to write.</param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.BinaryDataWriter.Write(System.UInt64[])">
 <summary>
 Writes the specified number of <see cref="T:System.UInt64"/> values into the current stream and advances the current
 position by that number of <see cref="T:System.UInt64"/> values multiplied with the size of a single value.
 </summary>
 <param name="values">The <see cref="T:System.UInt64"/> values to write.</param>
</member>
<member name="T:Microsoft.VisualBasic.Data.IO.ByteOrder">
 <summary>
 Represents the possible endianness of binary data.
 </summary>
</member>
<member name="F:Microsoft.VisualBasic.Data.IO.ByteOrder.BigEndian">
 <summary>
 The binary data is present in big endian.
 </summary>
</member>
<member name="F:Microsoft.VisualBasic.Data.IO.ByteOrder.LittleEndian">
 <summary>
 The binary data is present in little endian.
 </summary>
</member>
<member name="T:Microsoft.VisualBasic.Data.IO.ByteOrderHelper">
 <summary>
 Represents helper methods to handle data byte order.
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.Data.IO.ByteOrderHelper.SystemByteOrder">
 <summary>
 Gets the <see cref="T:Microsoft.VisualBasic.Data.IO.ByteOrder"/> of the system executing the assembly.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.Extensions.OpenBinaryReader(System.String,Microsoft.VisualBasic.Text.Encodings,System.Int64)">
 <summary>
 
 </summary>
 <param name="path"></param>
 <param name="encoding"></param>
 <param name="buffered%">
 默认的缓存临界大小是10MB，当超过这个大小的时候则不会进行缓存，假若没有操作这个临界值，则程序会一次性读取所有数据到内存之中以提高IO性能
 </param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.ReaderProvider.Open">
 <summary>
 请使用<see cref="M:Microsoft.VisualBasic.Data.IO.ReaderProvider.Cleanup(Microsoft.VisualBasic.Data.IO.BinaryDataReader)"/>方法来释放资源
 </summary>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.ReaderProvider.Cleanup(Microsoft.VisualBasic.Data.IO.BinaryDataReader)">
 <summary>
 使用这个清理方法来释放<see cref="M:Microsoft.VisualBasic.Data.IO.ReaderProvider.Open"/>打开的指针
 </summary>
 <param name="reader"></param>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.ReaderProvider.Read(System.Action{Microsoft.VisualBasic.Data.IO.BinaryDataReader})">
 <summary>
 
 </summary>
 <param name="run">
 请不要在这里面执行<see cref="M:System.IO.BinaryReader.Close"/>或者<see cref="M:System.IO.BinaryReader.Dispose"/>
 </param>
</member>
<member name="T:Microsoft.VisualBasic.Data.IO.Offset">
 <summary>
 Represents a space of 4 bytes reserved in the underlying stream of a <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataWriter"/> which can
 be comfortably satisfied later on.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.Offset.#ctor(Microsoft.VisualBasic.Data.IO.BinaryDataWriter)">
 <summary>
 Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Data.IO.Offset"/> class reserving an offset with the specified
 <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataWriter"/> at the current position.
 </summary>
 <param name="writer__1">The <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataWriter"/> holding the stream in which the offset will be
 reserved.</param>
</member>
<member name="P:Microsoft.VisualBasic.Data.IO.Offset.Writer">
 <summary>
 Gets the <see cref="T:Microsoft.VisualBasic.Data.IO.BinaryDataWriter"/> in which underlying stream the allocation is made.
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.Data.IO.Offset.Position">
 <summary>
 Gets the address at which the allocation is made.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.Offset.Satisfy">
 <summary>
 Satisfies the offset by writing the current position of the underlying stream at the reserved
 <see cref="P:Microsoft.VisualBasic.Data.IO.Offset.Position"/>, then seeking back to the current position.
 </summary>
</member>
<member name="T:Microsoft.VisualBasic.Data.IO.SeekTask">
 <summary>
 Represents a temporary seek to another position which is undone after the task has been disposed.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.SeekTask.#ctor(System.IO.Stream,System.Int64,System.IO.SeekOrigin)">
 <summary>
 Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Data.IO.SeekTask"/> class to temporarily seek the given
 <see cref="P:Microsoft.VisualBasic.Data.IO.SeekTask.Stream"/> to the specified position. The <see cref="T:System.IO.Stream"/> is rewound to its
 previous position after the task is disposed.
 </summary>
 <param name="stream__1">A <see cref="T:System.IO.Stream"/> to temporarily seek.</param>
 <param name="offset">A byte offset relative to the origin parameter.</param>
 <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain
 the new position.</param>
</member>
<member name="P:Microsoft.VisualBasic.Data.IO.SeekTask.Stream">
 <summary>
 Gets the <see cref="P:Microsoft.VisualBasic.Data.IO.SeekTask.Stream"/> which is temporarily sought to another position.
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.Data.IO.SeekTask.PreviousPosition">
 <summary>
 Gets the absolute position to which the <see cref="P:Microsoft.VisualBasic.Data.IO.SeekTask.Stream"/> will be rewound after this task is disposed.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.Data.IO.SeekTask.Dispose">
 <summary>
 Rewinds the <see cref="P:Microsoft.VisualBasic.Data.IO.SeekTask.Stream"/> to its previous position.
 </summary>
</member>
</members>
</doc>
